name: Deploy Hexo to GitHub Pages (Safe Version)

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    defaults:
      run:
        working-directory: ./src

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: "./src/package-lock.json"

      - name: Install dependencies
        run: npm ci --prefer-offline --no-audit

      - name: Clean previous build
        run: |
          echo "🧹 Cleaning previous build..."
          npm run clean || echo "Clean command completed"

      - name: Build site
        run: npm run build
        env:
          NODE_ENV: production

      - name: Verify build output
        run: |
          echo "🔍 Verifying build output..."
          if [ ! -d "public" ]; then
            echo "❌ Build failed: public directory not found"
            exit 1
          fi

          if [ ! -f "public/index.html" ]; then
            echo "❌ Build failed: index.html not found"
            exit 1
          fi

          INDEX_SIZE=$(stat -c%s "public/index.html" 2>/dev/null || stat -f%z "public/index.html")
          if [ "$INDEX_SIZE" -eq 0 ]; then
            echo "❌ Build failed: index.html is empty (0 bytes)"
            exit 1
          fi

          echo "✅ Build successful:"
          echo "  - Files generated: $(find public -type f | wc -l)"
          echo "  - index.html size: $INDEX_SIZE bytes"
          echo "  - .nojekyll exists: $([ -f 'public/.nojekyll' ] && echo 'Yes' || echo 'No')"

      - name: Clean only problematic files (minimal)
        run: |
          echo "🧹 Cleaning only essential problematic files..."

          # 只删除明确的系统文件，不使用通配符
          find ./public -name ".DS_Store" -type f -delete 2>/dev/null || true
          find ./public -name "Thumbs.db" -type f -delete 2>/dev/null || true
          find ./public -name "*:Zone.Identifier" -type f -delete 2>/dev/null || true
          find ./public -name "*.Zone.Identifier" -type f -delete 2>/dev/null || true

          echo "✅ Minimal cleanup completed"

      - name: Final verification
        run: |
          echo "🔍 Final verification..."
          INDEX_SIZE=$(stat -c%s "public/index.html" 2>/dev/null || stat -f%z "public/index.html")
          if [ "$INDEX_SIZE" -eq 0 ]; then
            echo "❌ index.html became empty after cleanup!"
            exit 1
          fi
          echo "✅ index.html still valid: $INDEX_SIZE bytes"

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./src/public

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Deployment success
        run: |
          echo "🚀 Deployment completed successfully!"
          echo "🌐 Site URL: ${{ steps.deployment.outputs.page_url }}"
